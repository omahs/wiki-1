"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6978],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},i=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||a;return t?r.createElement(f,l(l({ref:n},i),{},{components:t})):r.createElement(f,l({ref:n},i))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var p={};for(var u in n)hasOwnProperty.call(n,u)&&(p[u]=n[u]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_label:"gFT (ERC-20)",sidebar_position:3},l="\u4ec0\u4e48\u662f ERC-20?",p={unversionedId:"examples/gft-20",id:"examples/gft-20",title:"\u4ec0\u4e48\u662f ERC-20?",description:"ERC20 \u662f\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e0a\u521b\u5efa\u548c\u53d1\u884c\u667a\u80fd\u5408\u7ea6\u7684\u6807\u51c6\u3002\u5b83\u662f\u7531\u4ee5\u592a\u574a\u5f00\u53d1\u8005\u5728 2015 \u5e74\u4ee3\u8868\u4ee5\u592a\u574a\u793e\u533a\u521b\u5efa\u7684\uff0c\u5e76\u4e8e 2017 \u5e74\u88ab\u6b63\u5f0f\u8ba4\u53ef\u3002",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/examples/gft-20.md",sourceDirName:"examples",slug:"/examples/gft-20",permalink:"/zh-cn/docs/examples/gft-20",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/examples/gft-20.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"gFT (ERC-20)",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"PING-PONG",permalink:"/zh-cn/docs/examples/ping"},next:{title:"gNFT (ERC-721)",permalink:"/zh-cn/docs/examples/gnft-721"}},u={},c=[{value:"\u5b58\u50a8\u7ed3\u6784",id:"\u5b58\u50a8\u7ed3\u6784",level:2},{value:"<code>Action</code> \u548c <code>Event</code>",id:"action-\u548c-event",level:3},{value:"<code>Action</code> \u548c <code>Event</code> \u4e2d\u4f7f\u7528\u7684 Message/Reply \u7ed3\u6784",id:"action-\u548c-event-\u4e2d\u4f7f\u7528\u7684-messagereply-\u7ed3\u6784",level:3},{value:"gFT \u51fd\u6570",id:"gft-\u51fd\u6570",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],i={toc:c};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u4ec0\u4e48\u662f-erc-20"},"\u4ec0\u4e48\u662f ERC-20?"),(0,o.kt)("p",null,"ERC20 \u662f\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e0a\u521b\u5efa\u548c\u53d1\u884c\u667a\u80fd\u5408\u7ea6\u7684\u6807\u51c6\u3002\u5b83\u662f\u7531\u4ee5\u592a\u574a\u5f00\u53d1\u8005\u5728 2015 \u5e74\u4ee3\u8868\u4ee5\u592a\u574a\u793e\u533a\u521b\u5efa\u7684\uff0c\u5e76\u4e8e 2017 \u5e74\u88ab\u6b63\u5f0f\u8ba4\u53ef\u3002"),(0,o.kt)("p",null,"\u8fd9\u4e9b\u667a\u80fd\u5408\u7ea6\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u4ee3\u5e01\u5316\u8d44\u4ea7\uff0c\u4ee3\u8868\u4ee5\u592a\u574a\u533a\u5757\u94fe\u4e0a\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u6e38\u620f\u4e2d\u7684\u4ee3\u5e01")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u7c7b\u4f3c\u516c\u53f8\u80a1\u7968\u8fd9\u6837\u7684\u91d1\u878d\u5de5\u5177")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u6cd5\u5b9a\u8d27\u5e01\uff0c\u6bd4\u5982\u7f8e\u5143")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u9ec4\u91d1"))),(0,o.kt)("p",null,"\u8fd9\u4e9b\u901a\u8bc1\u5316\u7684\u8d44\u4ea7\u88ab\u79f0\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"Fungible Token"),"\uff0c\u7ed9\u5b9a\u7684 ERC20 Token \u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u6362\u3002\u552f\u4e00\u4e14\u4e0d\u80fd\u4e92\u6362\u7684 Token \u88ab\u79f0\u4e3a NFT (Non-Fungible Token)\u3002"),(0,o.kt)("p",null,"Gear \u63d0\u4f9b\u672c\u6587\u4e2d\u63cf\u8ff0\u7684\u540c\u8d28\u5316\u4ee3\u5e01 (gFT) \u7684\u539f\u751f\u5b9e\u73b0\u3002"),(0,o.kt)("h2",{id:"\u5b58\u50a8\u7ed3\u6784"},"\u5b58\u50a8\u7ed3\u6784"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"struct FungibleToken {\n    name: String, /// Name of the token.\n    symbol: String,  /// Symbol of the token.\n    total_supply: u128, /// Total supply of the token.\n    balances: BTreeMap<ActorId, u128>, /// Map to hold balances of token holders.\n    allowances: BTreeMap<ActorId, BTreeMap<ActorId, u128>>, /// Map to hold allowance information of token holders.\n}\n")),(0,o.kt)("h3",{id:"action-\u548c-event"},(0,o.kt)("inlineCode",{parentName:"h3"},"Action")," \u548c ",(0,o.kt)("inlineCode",{parentName:"h3"},"Event")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Event")," \u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"Action")," \u89e6\u53d1\u65f6\u751f\u6210\u3002 ",(0,o.kt)("inlineCode",{parentName:"p"},"Action")," \u5305\u88c5\u4e86\u5927\u91cf\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"Input")," \u7ed3\u6784\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"Event")," \u5305\u88c5\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"Reply"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Decode, Encode, TypeInfo)]\npub enum Action {\n    Mint(u128),\n    Burn(u128),\n    Transfer {\n        from: ActorId,\n        to: ActorId,\n        amount: u128,\n    },\n    Approve {\n        to: ActorId,\n        amount: u128,\n    },\n    TotalSupply,\n    BalanceOf(ActorId),\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Encode, Decode, TypeInfo)]\npub enum Event {\n    Transfer {\n        from: ActorId,\n        to: ActorId,\n        amount: u128,\n    },\n    Approve {\n        from: ActorId,\n        to: ActorId,\n        amount: u128,\n    },\n    TotalSupply(u128),\n    Balance(u128),\n}\n")),(0,o.kt)("h3",{id:"action-\u548c-event-\u4e2d\u4f7f\u7528\u7684-messagereply-\u7ed3\u6784"},(0,o.kt)("inlineCode",{parentName:"h3"},"Action")," \u548c ",(0,o.kt)("inlineCode",{parentName:"h3"},"Event")," \u4e2d\u4f7f\u7528\u7684 Message/Reply \u7ed3\u6784"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Decode, Encode, TypeInfo)]\npub struct InitConfig {\n    pub name: String,\n    pub symbol: String,\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Encode, Decode, TypeInfo)]\npub struct ApproveInput {\n    pub spender: ActorId,\n    pub amount: u128,\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Encode, Decode, TypeInfo)]\npub struct ApproveReply {\n    pub owner: ActorId,\n    pub spender: ActorId,\n    pub amount: u128,\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Decode, Encode, TypeInfo)]\npub struct TransferInput {\n    pub to: ActorId,\n    pub amount: u128,\n}\n")),(0,o.kt)("h2",{id:"gft-\u51fd\u6570"},"gFT \u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"    /// Minting the specified `amount` of tokens for the account that called this function.\n    fn mint(&mut self, amount: u128)\n\n    /// Burning the specified `amount` of tokens for the `account` that called this function\n    fn burn(&mut self, amount: u128)\n\n    /// Transfers `amount` tokens from `sender` account to `recipient` account.\n    fn transfer(&mut self, from: &ActorId, to: &ActorId, amount: u128)\n\n    /// Adds/Updates allowance entry for `spender` account to tranfer upto `amount` from `owner` account.\n    fn approve(&mut self, to: &ActorId, amount: u128)\n\n")),(0,o.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,o.kt)("p",null,"\u7531 Gear \u63d0\u4f9b\u7684\u667a\u80fd\u5408\u7ea6\u6e90\u7801\u5728 Github \u4e0a\u53ef\u4ee5\u627e\u5230\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gear-dapps/fungible-token/blob/master/src/lib.rs"},"fungible-token/src/lib.rs"),"\u3002"),(0,o.kt)("p",null,"\u540c\u6837\u53ef\u4ee5\u627e\u5230\u57fa\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"gtest")," \u5b9e\u73b0\u7684\u667a\u80fd\u5408\u7ea6\u6d4b\u8bd5\u8303\u4f8b\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gear-dapps/fungible-token/blob/master/src/tests.rs"},"fungible-token/src/tests.rs"),"\u3002"),(0,o.kt)("p",null,"\u66f4\u591a\u5173\u4e8e\u5728 Gear \u4e0a\u6d4b\u8bd5\u667a\u80fd\u5408\u7ea6\u7684\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1a",(0,o.kt)("a",{parentName:"p",href:"/zh-cn/docs/developing-contracts/testing"},"\u7a0b\u5e8f\u6d4b\u8bd5")," \u3002"))}s.isMDXComponent=!0}}]);