"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[1824],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1288:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_label:"\u7b2c\u4e09\u65b9\u62c5\u4fdd",sidebar_position:8},s="\u7b2c\u4e09\u65b9\u62c5",o={unversionedId:"examples/escrow",id:"examples/escrow",title:"\u7b2c\u4e09\u65b9\u62c5",description:"\u4ecb\u7ecd",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/examples/escrow.md",sourceDirName:"examples",slug:"/examples/escrow",permalink:"/zh-cn/docs/examples/escrow",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/examples/escrow.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"\u7b2c\u4e09\u65b9\u62c5\u4fdd",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"DAO",permalink:"/zh-cn/docs/examples/DAO"},next:{title:"Game of chance",permalink:"/zh-cn/docs/examples/game-of-chance"}},i={},p=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"\u4e1a\u52a1\u903b\u8f91",id:"\u4e1a\u52a1\u903b\u8f91",level:2},{value:"\u63a5\u53e3",id:"\u63a5\u53e3",level:2},{value:"\u521d\u59cb\u5316\u914d\u7f6e",id:"\u521d\u59cb\u5316\u914d\u7f6e",level:3},{value:"\u65b9\u6cd5",id:"\u65b9\u6cd5",level:3},{value:"Meta state \u67e5\u8be2",id:"meta-state-\u67e5\u8be2",level:3},{value:"\u7528\u6237\u754c\u9762",id:"\u7528\u6237\u754c\u9762",level:2},{value:".env \u4e2d\u57fa\u672c\u914d\u7f6e",id:"env-\u4e2d\u57fa\u672c\u914d\u7f6e",level:3},{value:"\u6e90\u7801",id:"\u6e90\u7801",level:2}],c={toc:p};function u(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u7b2c\u4e09\u65b9\u62c5"},"\u7b2c\u4e09\u65b9\u62c5"),(0,r.kt)("h2",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,r.kt)("p",null,"\u7b2c\u4e09\u65b9\u62c5\u4fdd\u662f\u4e00\u4e2a\u7279\u6b8a\u94b1\u5305\uff0c\u67d0\u4e9b\u8d44\u4ea7 (\u5982\u94b1\u6216\u80a1\u7968) \u5b58\u653e\u5728\u5176\u4e2d\uff0c\u76f4\u5230\u67d0\u4e9b\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\u3002\u5c31\u667a\u80fd\u5408\u7ea6\u800c\u8a00\uff0c\u7b2c\u4e09\u65b9\u62c5\u4fdd\u662f\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\u7684\u94b1\u5305\uff0c\u4e0e\u5e38\u89c4\u62c5\u4fdd\u4e00\u6837\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7528\u6237\u90a3\u91cc\u63a5\u6536\u4e00\u4e9b\u8d44\u4ea7 (\u4f8b\u5982\u52a0\u5bc6\u8d44\u4ea7\u6216\u4ee3\u5e01\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u662f\u50cf ",(0,r.kt)("a",{parentName:"p",href:"/zh-cn/docs/examples/gft-20"},"gFT"),"\u8d44\u4ea7)\uff0c\u5e76\u5728\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\u5c06\u5b83\u4eec\u53d1\u9001\u7ed9\u53e6\u4e00\u4e2a\u7528\u6237\u3002"),(0,r.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u667a\u80fd\u5408\u7ea6\u7684\u4f5c\u7528\u548c\u4ee3\u7801\u903b\u8f91\u3002\u60f3\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u6280\u672f\u63cf\u8ff0\uff0c\u8bf7\u53c2\u8003",(0,r.kt)("a",{parentName:"p",href:"https://dapps.gear.rs/escrow_io"},"\u6280\u672f\u6587\u6863"),"\u548c",(0,r.kt)("a",{parentName:"p",href:"#source-code"},"\u6e90\u7801"),"\u3002"),(0,r.kt)("p",null,"\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u89c6\u9891\u4e86\u89e3\u672c\u5408\u7ea6\uff1a",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://youtu.be/CD8j4epEY4E"},"https://youtu.be/CD8j4epEY4E")),"."),(0,r.kt)("h2",{id:"\u4e1a\u52a1\u903b\u8f91"},"\u4e1a\u52a1\u903b\u8f91"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4efb\u4f55\u7528\u6237\u90fd\u53ef\u4ee5\u521b\u5efa\u5408\u7ea6\uff0c\u4f5c\u4e3a\u4e70\u65b9\u6216\u5356\u65b9"),(0,r.kt)("li",{parentName:"ul"},"\u4e70\u65b9\u53ef\u4ee5\u652f\u4ed8\u5b9a\u91d1\u5e76\u786e\u8ba4\u5408\u540c"),(0,r.kt)("li",{parentName:"ul"},"\u5356\u65b9\u53ef\u4ee5\u5c06\u5df2\u4ed8\u6b3e\u5408\u540c\u4e2d\u7684\u4ee3\u5e01\u9000\u8fd8\u7ed9\u4e70\u65b9"),(0,r.kt)("li",{parentName:"ul"},"\u4e70\u5356\u53cc\u65b9\u90fd\u53ef\u4ee5\u53d6\u6d88\u672a\u4ed8\u6b3e\u5408\u540c")),(0,r.kt)("p",null,"\u4e00\u4e2a\u62c5\u4fdd\u5408\u7ea6\u5305\u542b\u4e86\u201c\u4e70\u65b9\u201d\u3001\u201c\u5356\u65b9\u201d\u4fe1\u606f\u548c\u5404\u81ea\u7684\u201c\u72b6\u6001\u201d\uff0c\u4ee5\u53ca\u53ef\u4ee5\u62c5\u4fdd\u7684\u4ee3\u5e01\u7684\u201c\u6570\u91cf\u201d\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"pub struct Wallet {\n    /// A buyer.\n    pub buyer: ActorId,\n    /// A seller.\n    pub seller: ActorId,\n    /// A wallet state.\n    pub state: WalletState,\n    /// An amount of tokens that a wallet can have. **Not** a current amount on\n    /// a wallet balance!\n    pub amount: u128,\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WalletState")," \u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u7528\u4e8e\u5b58\u50a8\u5408\u7ea6\u7ea6\u7684\u5f53\u524d\u72b6\u6001\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum WalletState {\n    AwaitingDeposit,\n    AwaitingConfirmation,\n    Closed,\n}\n")),(0,r.kt)("h2",{id:"\u63a5\u53e3"},"\u63a5\u53e3"),(0,r.kt)("h3",{id:"\u521d\u59cb\u5316\u914d\u7f6e"},"\u521d\u59cb\u5316\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"/// Initializes an escrow program.\n#[derive(Decode, Encode, TypeInfo)]\npub struct InitEscrow {\n    /// Address of a fungible token program.\n    pub ft_program_id: ActorId,\n}\n")),(0,r.kt)("h3",{id:"\u65b9\u6cd5"},"\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"/// An enum to send the program info about what it should do.\n///\n/// After a successful processing of this enum, the program replies with [`EscrowEvent`].\n#[derive(Decode, Encode, TypeInfo)]\npub enum EscrowAction {\n    /// Creates one escrow wallet and replies with its ID.\n    ///\n    /// # Requirements\n    /// * [`msg::source()`](gstd::msg::source) must be `buyer` or `seller` for this wallet.\n    /// * `buyer` or `seller` mustn't have the zero address.\n    ///\n    /// On success, returns [`EscrowEvent::Created`].\n    Create {\n        /// A buyer.\n        buyer: ActorId,\n        /// A seller.\n        seller: ActorId,\n        /// An amount of tokens.\n        amount: u128,\n    },\n\n    /// Makes a deposit from a buyer to an escrow wallet\n    /// and changes wallet's [`WalletState`] to [`AwaitingConfirmation`](WalletState::AwaitingConfirmation).\n    ///\n    /// Transfers tokens to an escrow wallet until a deal is confirmed (by [`EscrowAction::Confirm`]) or cancelled ([`EscrowAction::Cancel`]).\n    ///\n    /// # Requirements\n    /// * [`msg::source()`](gstd::msg::source) must be a buyer for this wallet.\n    /// * Wallet mustn't be paid or closed (that is, wallet's [`WalletState`] must be [`AwaitingDeposit`](WalletState::AwaitingDeposit)).\n    ///\n    /// On success, returns [`EscrowEvent::Deposited`].\n    Deposit(\n        /// A wallet ID.\n        WalletId,\n    ),\n\n    /// Confirms a deal by transferring tokens from an escrow wallet\n    /// to a seller and changing wallet's [`WalletState`] to [`Closed`](WalletState::Closed).\n    ///\n    /// Transfers tokens from an escrow wallet to a seller for this wallet.\n    ///\n    /// # Requirements\n    /// * [`msg::source()`](gstd::msg::source) must be a buyer for this wallet.\n    /// * Wallet must be paid and unclosed (that is, wallet's [`WalletState`] must be [`AwaitingDeposit`](WalletState::AwaitingConfirmation)).\n    ///\n    /// On success, returns [`EscrowEvent::Confirmed`].\n    Confirm(\n        /// A wallet ID.\n        WalletId,\n    ),\n\n    /// Refunds tokens from an escrow wallet to a buyer\n    /// and changes wallet's [`WalletState`] back to [`AwaitingDeposit`](WalletState::AwaitingDeposit)\n    /// (that is, a wallet can be reused).\n    ///\n    /// Refunds tokens from an escrow wallet to a buyer for this wallet.\n    ///\n    /// # Requirements\n    /// * [`msg::source()`](gstd::msg::source) must be a seller for this wallet.\n    /// * Wallet must be paid and unclosed (that is, wallet's [`WalletState`] must be [`AwaitingDeposit`](WalletState::AwaitingConfirmation)).\n    ///\n    /// On success, returns [`EscrowEvent::Refunded`].\n    Refund(\n        /// A wallet ID.\n        WalletId,\n    ),\n\n    /// Cancels a deal and closes an escrow wallet by changing its [`WalletState`] to [`Closed`](WalletState::Closed).\n    ///\n    /// # Requirements\n    /// * [`msg::source()`](gstd::msg::source) must be a buyer or seller for this wallet.\n    /// * Wallet mustn't be paid or closed (that is, wallet's [`WalletState`] must be [`AwaitingDeposit`](WalletState::AwaitingDeposit)).\n    ///\n    /// On success, returns [`EscrowEvent::Cancelled`].\n    Cancel(\n        /// A wallet ID.\n        WalletId,\n    ),\n}\n")),(0,r.kt)("h3",{id:"meta-state-\u67e5\u8be2"},"Meta state \u67e5\u8be2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"/// An enum for requesting the program state.\n///\n/// After a successful processing of this enum, the program replies with [`EscrowStateReply`].\n#[derive(Decode, Encode, TypeInfo)]\npub enum EscrowState {\n    /// Gets wallet info.\n    ///\n    /// On success, returns [`EscrowStateReply::Info`].\n    Info(\n        /// A wallet ID.\n        WalletId,\n    ),\n    /// Gets all created wallets.\n    ///\n    /// On success, returns [`EscrowStateReply::CreatedWallets`].\n    CreatedWallets,\n}\n")),(0,r.kt)("h2",{id:"\u7528\u6237\u754c\u9762"},"\u7528\u6237\u754c\u9762"),(0,r.kt)("p",null,"\u4e00\u4e2a",(0,r.kt)("a",{parentName:"p",href:"https://escrow.gear-tech.io/"},"\u73b0\u6210\u7684\u5e94\u7528"),"\u5b9e\u4f8b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gear-dapps/dao-light"},"\u7b2c\u4e09\u65b9\u62c5\u4fdd"),"\u667a\u80fd\u5408\u7ea6\u4e92\u52a8\u7684\u7528\u6237\u754c\u9762\u3002"),(0,r.kt)("p",null,"\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u89c6\u9891\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\uff1a",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://youtu.be/CD8j4epEY4E"},"https://youtu.be/CD8j4epEY4E")),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"img alt",src:n(4821).Z,width:"3817",height:"1777"})),(0,r.kt)("p",null,"\u6e90\u7801\u5728 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/apps/escrow"},"GitHub"),"."),(0,r.kt)("h3",{id:"env-\u4e2d\u57fa\u672c\u914d\u7f6e"},".env \u4e2d\u57fa\u672c\u914d\u7f6e"),(0,r.kt)("p",null,"For proper application functioning, one needs to create ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file and adjust an environment variable parameters. An example is available ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/blob/main/apps/escrow/.env.example"},"here"),"."),(0,r.kt)("p",null,"\u4e3a\u4e86\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\uff0c\u9700\u8981\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},".env"),"\u6587\u4ef6\u5e76\u8c03\u6574\u73af\u5883\u53d8\u91cf\u3002\u6709\u4e00\u4e2a\u4f8b\u5b50\u5728",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/blob/main/apps/escrow/.env.example"},"\u8fd9\u91cc"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"REACT_APP_NODE_ADDRESS\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"REACT_APP_NODE_ADDRESS")," \u662f Gear Network \u7684 \u5730\u5740 (\u9ed8\u8ba4 wss://rpc-node.gear-tech.io:443)")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u4e3a\u4e86\u4f7f\u6240\u6709\u7684\u529f\u80fd\u90fd\u80fd\u6309\u9884\u671f\u5de5\u4f5c\uff0c\u5e94\u8be5\u6839\u636e\u5f53\u524d ",(0,r.kt)("inlineCode",{parentName:"p"},"@gear-js/api")," \u7684\u7248\u672c\u6765\u9009\u62e9\u8282\u70b9\u53ca\u5176\u8fd0\u884c\u65f6\u7248\u672c\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u5728\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u5c1d\u8bd5\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u7f51\u7edc\u6216\u8fd0\u884c\u4f60\u81ea\u5df1\u7684\u672c\u5730\u8282\u70b9\uff0c\u5e76\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," \u6587\u4ef6\u4e2d\u6307\u5b9a\u5176\u5730\u5740\u3002\u786e\u4fdd\u667a\u80fd\u5408\u7ea6 wasm \u6587\u4ef6\u5df2\u4e0a\u4f20\u5e76\u5728\u8be5\u7f51\u7edc\u4e2d\u8fd0\u884c\u3002")),(0,r.kt)("h2",{id:"\u6e90\u7801"},"\u6e90\u7801"),(0,r.kt)("p",null,"Escrow \u7684\u5408\u7ea6\u6e90\u7801\u53ef\u4ee5\u5728 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gear-dapps/escrow"},"GitHub")," \u627e\u5230\u3002"),(0,r.kt)("p",null,"\u66f4\u591a\u5173\u4e8e\u5728 Gear \u7684\u6d4b\u8bd5\u667a\u80fd\u5408\u7ea6\u7684\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1a",(0,r.kt)("a",{parentName:"p",href:"/docs/developing-contracts/testing"},"\u5e94\u7528\u6d4b\u8bd5"),"\u3002"))}u.isMDXComponent=!0},4821:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/escrow-d2b6bf1bf1f1b227f1b40b35d1c53dad.png"}}]);