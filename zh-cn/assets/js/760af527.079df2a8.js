"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2967],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_label:"State \u51fd\u6570",sidebar_position:4},o="\u5b58\u50a8\u6570\u636e",i={unversionedId:"developing-contracts/state",id:"developing-contracts/state",title:"\u5b58\u50a8\u6570\u636e",description:"Gear \u667a\u80fd\u5408\u7ea6\u7684\u6301\u4e45\u5316\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0e\u4f20\u7edf\u7a0b\u5e8f\u76f8\u540c\uff0c\u4e0d\u9700\u8981\u521d\u59cb\u5316\u5916\u90e8\u5b58\u50a8\u3002",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/developing-contracts/state.md",sourceDirName:"developing-contracts",slug:"/developing-contracts/state",permalink:"/zh-cn/docs/developing-contracts/state",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/developing-contracts/state.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"State \u51fd\u6570",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"\u5f02\u6b65\u5408\u7ea6\u901a\u8baf",permalink:"/zh-cn/docs/developing-contracts/interactions-between-programs"},next:{title:"\u5408\u7ea6\u6d4b\u8bd5",permalink:"/zh-cn/docs/developing-contracts/testing"}},s={},p=[{value:"State \u51fd\u6570",id:"state-\u51fd\u6570",level:2},{value:"\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u8bfb\u53d6\u72b6\u6001",id:"\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u8bfb\u53d6\u72b6\u6001",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u5b58\u50a8\u6570\u636e"},"\u5b58\u50a8\u6570\u636e"),(0,r.kt)("p",null,"Gear \u667a\u80fd\u5408\u7ea6\u7684\u6301\u4e45\u5316\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0e\u4f20\u7edf\u7a0b\u5e8f\u76f8\u540c\uff0c\u4e0d\u9700\u8981\u521d\u59cb\u5316\u5916\u90e8\u5b58\u50a8\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// ...\n// describe state structure\n#[derive(TypeInfo, Decode, Encode, Clone)]\npub struct Wallet {\n    pub id: ActorId,\n    pub person: String,\n}\n\n// declare and initialize the state\nstatic mut WALLETS: Vec<Wallet> = Vec::new();\n")),(0,r.kt)("p",null,"\u5982\u679c\u7528 Rust \u6216\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u7f16\u7a0b\uff0c\u4f60\u5e94\u8be5\u5bf9\u5927\u591a\u6570\u7c7b\u578b\u90fd\u5f88\u719f\u6089\u3002\u7136\u800c\uff0c\u5728 Gear \u4e0a\u5f00\u53d1\u5408\u7ea6\u65f6\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"ActorId")," \u7c7b\u578b\u662f\u4e00\u4e2a\u65b0\u5185\u5bb9\u3002"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"ActorId")," \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u4ee3\u8868\u4e00\u4e2a 32 \u5b57\u8282\u7684\u6570\u7ec4\uff0c\u5e76\u5b9a\u4e49\u4e86 Gear Protocol \u4e2d\u6240\u6709\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"ID"),"\u3002")),(0,r.kt)("h2",{id:"state-\u51fd\u6570"},"State \u51fd\u6570"),(0,r.kt)("p",null,"\u4e3a\u4e86\u663e\u793a\u5408\u7ea6\u72b6\u6001\u4fe1\u606f\uff08\u7c7b\u4f3c\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"view"),"\u51fd\u6570\uff09\uff0c\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"state()")," \u51fd\u6570\u3002\u5b83\u53ef\u4ee5\u7acb\u5373\u8bfb\u53d6\u5408\u7ea6\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u4f59\u989d\uff09\u3002\u8bfb\u53d6\u72b6\u6001\u662f\u4e00\u4e2a\u514d\u8d39\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u6d88\u8017\u4efb\u4f55 gas\u3002"),(0,r.kt)("p",null,"\u8981\u8fd4\u56de State \u4f7f\u7528\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[no_mangle]\nextern "C" fn state() {\n    msg::reply(unsafe { WALLETS.clone() }, 0).expect("Failed to share state");\n}\n')),(0,r.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"state()")," \u51fd\u6570\u8fd4\u5408\u7ea6\u7684\u6574\u4f53\u72b6\u6001\u3002"),(0,r.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u8bfb\u53d6\u72b6\u6001"},"\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u8bfb\u53d6\u72b6\u6001"),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u7a0b\u5e8f\u6765\u8bfb\u53d6\u72b6\u6001\u3002\u8fd9\u4e2a\u5305\u88c5\u5668\u5c06\u5141\u8bb8\u4f60\u4e3a\u5ba2\u6237\u7aef\u5b9e\u73b0\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u800c\u4e0d\u4f9d\u8d56\u4e8e\u4e3b\u7a0b\u5e8f\u3002"),(0,r.kt)("p",null,"\u8fd9\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u4f8b\u5982\uff0c\u5373\u4f7f\u7a0b\u5e8f\u6539\u53d8\u4e86\uff0c\u4e5f\u59cb\u7ec8\u80fd\u591f\u8bfb\u53d6\u72b6\u6001\uff08\u53ea\u8981\u8f93\u5165\u6216\u8f93\u51fa\u7684\u7c7b\u578b\u6ca1\u6709\u6539\u53d8\uff09\u3002\u6216\u8005\u4f60\u6b63\u5728\u57fa\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7a0b\u5e8f\u521b\u5efa\u670d\u52a1\uff0c\u4f60\u9700\u8981\u4e00\u4e9b\u81ea\u5df1\u7684\u51fd\u6570\u6765\u4ece\u72b6\u6001\u4e2d\u83b7\u5f97\u4f60\u81ea\u5df1\u7684\u6570\u636e\u5757\u3002"),(0,r.kt)("p",null,"\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\u5e76\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"metawasm")," \u7279\u5f81\u4e2d\u63cf\u8ff0\u5fc5\u8981\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// ...\nuse gmeta::metawasm;\n\n#[metawasm]\npub trait Metawasm {\n    type State = Vec<Wallet>;\n\n    fn all_wallets(state: Self::State) -> Vec<Wallet> {\n        state\n    }\n\n    fn first_wallet(state: Self::State) -> Option<Wallet> {\n        state.first().cloned()\n    }\n\n    fn last_wallet(state: Self::State) -> Option<Wallet> {\n        state.last().cloned()\n    }\n}\n")),(0,r.kt)("p",null,"\u66f4\u591a\u590d\u6742\u7684\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// ...\nuse gmeta::metawasm;\n\n#[metawasm]\npub trait Metawasm {\n    type State = Vec<Wallet>;\n\n    fn wallet_by_id(id: Id, state: Self::State) -> Option<Wallet> {\n        state.into_iter().find(|w| w.id == id)\n    }\n\n    fn wallet_by_person(person: String, state: Self::State) -> Option<Wallet> {\n        state.into_iter().find(|w| w.person == person)\n    }\n}\n")),(0,r.kt)("p",null,"\u8981\u6784\u5efa ",(0,r.kt)("inlineCode",{parentName:"p"},"meta.wasm"),"\uff0c\u9700\u8981\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u8bbe\u7f6e ",(0,r.kt)("inlineCode",{parentName:"p"},"build.rs")," \u6587\u4ef6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    gear_wasm_builder::build_metawasm();\n}\n")),(0,r.kt)("p",null,"\u8bf7\u770b",(0,r.kt)("a",{parentName:"p",href:"/docs/developing-contracts/metadata/"},"\u66f4\u591a"),"\u5173\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata"),"\u7684\u5185\u5bb9\u3002"))}u.isMDXComponent=!0}}]);