"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2600],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_label:"Asynchronous Programming",sidebar_position:6},i="Asynchronous programming",s={unversionedId:"developing-contracts/interactions-between-programs",id:"developing-contracts/interactions-between-programs",title:"Asynchronous programming",description:"Asynchronous interaction between Gear programs is similar to the usual asynchronous request in using await and implemented by sending a message.",source:"@site/docs/developing-contracts/interactions-between-programs.md",sourceDirName:"developing-contracts",slug:"/developing-contracts/interactions-between-programs",permalink:"/docs/developing-contracts/interactions-between-programs",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/developing-contracts/interactions-between-programs.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Asynchronous Programming",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Data Encoding/Decoding",permalink:"/docs/developing-contracts/codec"},next:{title:"Create Program",permalink:"/docs/developing-contracts/create"}},c={},l=[{value:"Program entry points",id:"program-entry-points",level:2},{value:"async_init()",id:"async_init",level:3},{value:"main()",id:"main",level:3}],p={toc:l};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"asynchronous-programming"},"Asynchronous programming"),(0,a.kt)("p",null,"Asynchronous interaction between Gear programs is similar to the usual asynchronous request in using ",(0,a.kt)("inlineCode",{parentName:"p"},"await")," and implemented by sending a message."),(0,a.kt)("h2",{id:"program-entry-points"},"Program entry points"),(0,a.kt)("p",null,"If a program's logic implies asynchronous messaging, its main executable functions must differ from those used in synchronous communications."),(0,a.kt)("h3",{id:"async_init"},"async_init()"),(0,a.kt)("p",null,"In case of an asynchronous call in the program initialization, the ",(0,a.kt)("inlineCode",{parentName:"p"},"async_init()")," must be used instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"init()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[gstd::async_init]\nasync fn init() {\n    gstd::debug!("Hello world!");\n}\n')),(0,a.kt)("h3",{id:"main"},"main()"),(0,a.kt)("p",null,"The same for asynchronous messages, the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," must be used instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"handle")," ",(0,a.kt)("inlineCode",{parentName:"p"},"handle_reply"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[gstd::async_main]\nasync fn main() {\n    gstd::debug!("Hello world!");\n}\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"async_init")," \u0441an be used together with ",(0,a.kt)("inlineCode",{parentName:"p"},"async_main"),". But functions ",(0,a.kt)("inlineCode",{parentName:"p"},"init"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"handle_reply")," cannot be specified if this macro is used.")),(0,a.kt)("h1",{id:"cross-program-message"},"Cross-program message"),(0,a.kt)("p",null,"To send a message to a Gear program, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"send_for_reply(program, payload, value)")," function. In this function:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"program - the address of the program to send the message for;"),(0,a.kt)("li",{parentName:"ul"},"payload - the message to the program;"),(0,a.kt)("li",{parentName:"ul"},"value - the funds attached to the message.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"  pub fn send_for_reply_as<E: Encode, D: Decode>(\n    program: ActorId,\n    payload: E,\n    value: u128\n) -> Result<CodecMessageFuture<D>>\n")))}m.isMDXComponent=!0}}]);