"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4641],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=d(r),f=n,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||o;return r?a.createElement(m,s(s({ref:t},l),{},{components:r})):a.createElement(m,s({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var d=2;d<o;d++)s[d]=r[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2459:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_label:"SS58 account format",sidebar_position:2},s="SS58 Address Format",i={unversionedId:"idea/account/ss58",id:"idea/account/ss58",title:"SS58 Address Format",description:"SS58 is a simple address format designed for Substrate based chains. The basic idea is a base-58 encoded value which can identify a specific account on the Substrate chain. For more details about the format, please check https://docs.substrate.io/v3/advanced/ss58/.",source:"@site/docs/idea/account/ss58.md",sourceDirName:"idea/account",slug:"/idea/account/ss58",permalink:"/docs/idea/account/ss58",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/idea/account/ss58.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"SS58 account format",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create Account",permalink:"/docs/idea/account/create-account"},next:{title:"Getting started",permalink:"/docs/api/getting-started"}},c={},d=[],l={toc:d};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ss58-address-format"},"SS58 Address Format"),(0,n.kt)("p",null,"SS58 is a simple address format designed for Substrate based chains. The basic idea is a base-58 encoded value which can identify a specific account on the Substrate chain. For more details about the format, please check ",(0,n.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/advanced/ss58/"},"https://docs.substrate.io/v3/advanced/ss58/"),"."),(0,n.kt)("h1",{id:"select-address-format-to-use-with-gear-test-network"},"Select address format to use with Gear test network"),(0,n.kt)("p",null,"Gear Idea backend uses Substrate address format. When you take part in activities and events that are organized by Gear, like workshops and live AMAs, to receive bonus tokens, you have to specify an account address in the Substrate address format."),(0,n.kt)("p",null,"If you already have a Polkadot account, Kusama account, or any other Substrate-based network account, you can set the address format for your wallets in polkadot.js extension:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open polkadot.js extension in your browser and click the Settings icon on the top right corner.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},'In the opened window click on the dropdown menu "Display address format for" and select "Substrate":'))),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"img alt",src:r(8871).Z,width:"299",height:"543"})),(0,n.kt)("h1",{id:"ss58-address-converter"},"SS58 Address converter"),(0,n.kt)("p",null,"Unfortunately, addresses in the SS58 format are inconvenient for working with smart contracts in Gear IDEA, because they accept addresses as a 256-bit public key (also known as an actor ID). You can convert an address to a key by yourself or use this simple online converter: ",(0,n.kt)("a",{parentName:"p",href:"https://ss58.org"},"https://ss58.org")," (don't forget to select the ",(0,n.kt)("strong",{parentName:"p"},"Address \u2192 Key")," tab)."))}u.isMDXComponent=!0},8871:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/address-format-6287d3431f39906f9e26e8e07377c53d.png"}}]);