"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[333],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return r?a.createElement(h,o(o({ref:t},l),{},{components:r})):a.createElement(h,o({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1052:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_label:"IDEA Overview",sidebar_position:1},o="Gear IDEA online",s={unversionedId:"idea/idea-overview",id:"idea/idea-overview",title:"Gear IDEA online",description:"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration.",source:"@site/docs/idea/idea-overview.md",sourceDirName:"idea",slug:"/idea/idea-overview",permalink:"/docs/idea/idea-overview",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/idea/idea-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"IDEA Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Oracle",permalink:"/docs/examples/oracle"},next:{title:"Create Account",permalink:"/docs/idea/account/create-account"}},c={},p=[],l={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gear-idea-online"},"Gear IDEA online"),(0,n.kt)("p",null,"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration."),(0,n.kt)("p",null,"This is the demo application that implements all of the possibilities of interaction with smart-contracts in Gear, that also manages accounts, balances, events and more."),(0,n.kt)("p",null,"You can start experimenting right now on ",(0,n.kt)("a",{parentName:"p",href:"https://idea.gear-tech.io/"},"https://idea.gear-tech.io/"),"."),(0,n.kt)("h1",{id:"idea-components-and-microservices"},"IDEA components and microservices"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/frontend"},"frontend")),(0,n.kt)("p",null,"React application that provides user interface for working with smart-contracts on Gear IDEA."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/events-listener"},"events-listener")),(0,n.kt)("p",null,"Microservice listens to all the events occuring in the Gear node and sends to the data-storage to store the information about them."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/data-storage"},"data-storage")),(0,n.kt)("p",null,"Microservice responsible for storing metadata of uploaded programs and information about events."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/api-gateway"},"api-gateway")),(0,n.kt)("p",null,"Microservice provides any interaction between the events / meta data store and an external user."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/test-balance"},"test-balance")),(0,n.kt)("p",null,"Microservice provides the opportunity to obtain test tokens."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/main/idea/wasm-compiler"},"wasm-compiler")),(0,n.kt)("p",null,"Microservice provides the opportunity to compile Rust projects to Wasm."))}d.isMDXComponent=!0}}]);