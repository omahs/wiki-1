"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3586],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=o,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||n;return a?r.createElement(g,i(i({ref:t},c),{},{components:a})):r.createElement(g,i({ref:t},c))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<n;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2005:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var r=a(7462),o=(a(7294),a(3905));const n={sidebar_label:"Upload Program",sidebar_position:11},i="Upload smart contracts",l={unversionedId:"developing-contracts/deploy",id:"developing-contracts/deploy",title:"Upload smart contracts",description:"Following the principles of Actor model for communication, uploading a program in the network is just one of the specific types of transactions that contain a Wasm file as a payload.",source:"@site/docs/developing-contracts/deploy.md",sourceDirName:"developing-contracts",slug:"/developing-contracts/deploy",permalink:"/docs/developing-contracts/deploy",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/developing-contracts/deploy.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_label:"Upload Program",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"System Signals",permalink:"/docs/developing-contracts/system-signals"},next:{title:"Program Testing",permalink:"/docs/developing-contracts/testing"}},p={},s=[{value:"Program upload events",id:"program-upload-events",level:2},{value:"How to upload",id:"how-to-upload",level:2},{value:"Upload via Gear GUI",id:"upload-via-gear-gui",level:3},{value:"Via gear-js library",id:"via-gear-js-library",level:3},{value:"Via <code>gear-program</code>",id:"via-gear-program",level:3}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"upload-smart-contracts"},"Upload smart contracts"),(0,o.kt)("p",null,"Following the principles of Actor model for communication, uploading a program in the network is just one of the specific types of transactions that contain a Wasm file as a payload."),(0,o.kt)("p",null,"Uploading a new program (smart-contract) to the blockchain takes place by calling the custom extrinsic ",(0,o.kt)("inlineCode",{parentName:"p"},"gear.uploadProgram(code, salt, initPayload, gasLimit, value)"),".\nWhere:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"code: Bytes")," - binary Wasm code"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"salt: Bytes")," - the random data that is added to the hashing process to force their uniqueness"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"initPayload: Bytes"),"- the init message payload that will be processed by the init() function during program initialization"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"gasLimit: u64")," - the amount of gas that users are willing to spend on processing the upload of a new program"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"value: u128")," - the value that will be transferred to a balance of the newly created account for the program")),(0,o.kt)("h2",{id:"program-upload-events"},"Program upload events"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: while extrinsics represent information from the outside world, events represent information from the chain. Extrinsics can trigger events.")),(0,o.kt)("p",null,"The extrinsic that was called to upload a program triggers a series of events. Learn more about events ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/events#gear-events-types"},"here"),"."),(0,o.kt)("h2",{id:"how-to-upload"},"How to upload"),(0,o.kt)("p",null,"There are several ways to upload a program:"),(0,o.kt)("h3",{id:"upload-via-gear-gui"},"Upload via Gear GUI"),(0,o.kt)("p",null,"The easiest way to upload the program is to use the \u201cUpload program\u201d option in the Gear Idea portal - ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://idea.gear-tech.io"},"idea.gear-tech.io")),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img alt",src:a(6580).Z,width:"3830",height:"1857"})),(0,o.kt)("h3",{id:"via-gear-js-library"},"Via gear-js library"),(0,o.kt)("p",null,"The Gear-js library provides a simple and intuitive way to connect Gear Component APIs, including interaction with programs. More details: ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/getting-started"},"Gear API"),"."),(0,o.kt)("h3",{id:"via-gear-program"},"Via ",(0,o.kt)("inlineCode",{parentName:"h3"},"gear-program")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gear-program")," is the command line (CLI) utility for interacting with the blockchain network. Refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-program"},"gear-program GitHub repo")," for details."))}d.isMDXComponent=!0},6580:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/idea-upload-1d5f2fe059c2a71a1b7db16945d5c875.png"}}]);