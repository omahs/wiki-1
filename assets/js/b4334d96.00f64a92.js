"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[1346],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>u});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),l=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=l(e.components);return n.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(t),u=r,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||o;return t?n.createElement(g,i(i({ref:a},d),{},{components:t})):n.createElement(g,i({ref:a},d))}));function u(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3536:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=t(7462),r=(t(7294),t(3905));const o={sidebar_position:3,sidebar_label:"Calculate gas"},i="Calculate gas",c={unversionedId:"api/calculate-gas",id:"api/calculate-gas",title:"Calculate gas",description:"Gear nodes charge gas fees for all network operations, whether that be executing a program\u2019s code or processing a message. This gas is paid by the initiator of these actions.",source:"@site/docs/api/calculate-gas.md",sourceDirName:"api",slug:"/api/calculate-gas",permalink:"/docs/api/calculate-gas",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/api/calculate-gas.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Calculate gas"},sidebar:"tutorialSidebar",previous:{title:"Keyring",permalink:"/docs/api/keyring"},next:{title:"Upload Program",permalink:"/docs/api/upload-program"}},s={},l=[{value:"Calculate gas for messages",id:"calculate-gas-for-messages",level:2}],d={toc:l};function p(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"calculate-gas"},"Calculate gas"),(0,r.kt)("p",null,"Gear nodes charge gas fees for all network operations, whether that be executing a program\u2019s code or processing a message. This gas is paid by the initiator of these actions."),(0,r.kt)("p",null,"They guarantee successful message processing and to avoid errors like ",(0,r.kt)("inlineCode",{parentName:"p"},"Gaslimit exceeded"),", you can simulate the execution in advance to calculate the exact amount of gas that will be consumed."),(0,r.kt)("h2",{id:"calculate-gas-for-messages"},"Calculate gas for messages"),(0,r.kt)("p",null,"To find out the minimum gas amount required to send extrinsic, use ",(0,r.kt)("inlineCode",{parentName:"p"},"gearApi.program.calculateGas.[method]"),". Depending on the conditions, you can calculate gas for initializing a program or processing a message in ",(0,r.kt)("inlineCode",{parentName:"p"},"handle()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"reply()"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Gas calculation returns the GasInfo object, which contains 5 parameters:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"min_limit")," - minimum gas limit required for execution"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"reserved")," - gas amount that will be reserved for other on-chain interactions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"burned")," - number of gas burned during message processing"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"may_be_returned")," - value that can be returned in some cases"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waited")," - notifies that the message will be added to waitlist\n:::")),(0,r.kt)("h3",{parentName:"admonition",id:"init-for-upload_program-extrinsic"},"Init (for upload_program extrinsic)"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const code = fs.readFileSync('demo_ping.opt.wasm');\n\nconst gas = await gearApi.program.calculateGas.initUpload(\n  '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d', // source id\n  code,\n  '0x00', // payload\n  0, //value\n  true, // allow other panics\n);\n\nconsole.log(gas.toHuman());\n")),(0,r.kt)("h3",{parentName:"admonition",id:"init-for-create_program-extrinsic"},"Init (for create_program extrinsic)"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const codeId = '0x...';\n\nconst gas = await gearApi.program.calculateGas.initCreate(\n  '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d', // source id\n  codeId,\n  '0x00', // payload\n  0, //value\n  true, // allow other panics\n);\n\nconsole.log(gas.toHuman());\n")),(0,r.kt)("h3",{parentName:"admonition",id:"handle"},"Handle"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const code = fs.readFileSync('demo_meta.opt.wasm');\nconst meta = await getWasmMetadata(fs.readFileSync('demo_meta.opt.wasm'));\nconst gas = await gearApi.program.calculateGas.handle(\n  '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d', // source id\n  '0xa178362715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d', //program id\n  {\n    id: {\n      decimal: 64,\n      hex: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n    },\n  }, // payload\n  0, // value\n  false, // allow other panics\n  meta,\n);\nconsole.log(gas.toHuman());\n")),(0,r.kt)("h3",{parentName:"admonition",id:"reply-to-a-message"},"Reply to a message"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const code = fs.readFileSync('demo_async.opt.wasm');\nconst meta = await getWasmMetadata(fs.readFileSync('demo_async.opt.wasm'));\nconst gas = await gearApi.program.calculateGas.reply(\n  '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d', // source id\n  '0x518e6bc03d274aadb3454f566f634bc2b6aef9ae6faeb832c18ae8300fd72635', // message id\n  0, // exit code\n  'PONG', // payload\n  0, // value\n  true, // allow other panics\n  meta,\n);\nconsole.log(gas.toHuman());\n"))))}p.isMDXComponent=!0}}]);